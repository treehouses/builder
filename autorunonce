#!/bin/bash

#Local variables
configtor=true
configdocker=true
updateplanet=false

#Uncomment the appropriate line for your connection

#treehouses wifi <wifiname> [password]
#treehouses ap internet <hotspotname> [password]
treehouses ap internet treehouses
#treehouses ap local <hotspotname> [password]
#treehouses bridge <wifiname> <hotspotname> [wifipassword] [hotspotpassword]

# Start tor service
if [ "$(configtor)" = "true" ]; then
	treehouses tor add 22
	sleep 10
	treehouses tor start
	sync
	sleep 10
	treehouses tor notice on
	sync
	sleep 10
fi

# Update planet if there is an internet connection
if [ "$(updateplanet)" = "true" ]; then
	docker pull treehouses/planet:latest
	docker pull treehouses/planet:db-init
	docker tag treehouses/planet:latest treehouses/planet:local
	docker tag treehouses/planet:db-init treehouses/planet:db-init-local
fi

# Starts docker container
if [ "$(configdocker)" = "true" ] then
	{	
	echo "#!/bin/sh"
	echo
	echo "sleep 1"
	echo
	echo "if [ -f /srv/planet/pwd/credentials.yml ]; then"
	echo "  docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -f /srv/planet/pwd/credentials.yml -p planet up -d"
	echo "else"
	echo "  docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -p planet up -d"
	echo "fi"
	} > /boot/autorun

	mv /srv/tenalp /srv/planet

	sync;sync;sync
	
	docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -p planet up -d
fi

# Reset if RPiZero or RPi3A
case "$(treehouses detectrpi)" in
  RPIZW|RPI3A+)
    treehouses bootoption console
esac

if [ "$(treehouses rebootneeded)" = "true" ]; then
  reboot
fi

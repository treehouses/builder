#!/bin/bash

# ----- BASIC CONFIGURATIONS: -----

# Sets hostname to a desirable name
# (default: treehouses)
hostname='treehouses'

# Set your Pihole Admin password
# (default is no password)
piholepassword=''


# ----- INTERNET CONFIGURATIONS: -----

# Options for connectiontype:
#   "ethernet" connects to ethernet only
#   "wifi" connects to an existing router
#   "apinternet" turns the raspberry pi into a hotspot with internet connection
#   "aplocal" turns the raspberry pi into a hotspot without internet connection
#   "bridge" connects to an existing router, creates a raspberry pi hotspot and bridges these two connections.
connectiontype="ethernet"

# wifiname: Insert the name (SSID) of your wifi router
# wifipassword: Insert the password of your wifi router. Leave field empty for open networks
# (Edit if "connectiontype" is "wifi" or "bridge")
wifiname=''
wifipassword=''

# hotspotname: Change to the name you want your hotspot to have, raspberry pi will be a hotspot with this name as SSID
# hotspotpassword:
#   Insert the password you want your Raspberry Pi hotspot to have. Can be blank for no password (open network)
#   Passwords must be 8 characters or more. If your password has less, it will be configured as open network
# (Edit if "connectiontype" is "apinternet", "aplocal" or "bridge")
hotspotname='treehouses'
hotspotpassword=''


# No need to edit below this line
#----------------------------------------------------------------------------------------------------#

treehouses rename $hostname
treehouses expandfs
treehouses button bluetooth

# configures the wifi antenna of the raspberry pi
if [ ${#hotspotpassword} -lt 8 ]; then hotspotpassword=''; fi; # no password if the password is < 8 characters long
case $connectiontype in
  "ethernet")
    ;;
  "wifi")
    treehouses wifi $wifiname $wifipassword;;
  "apinternet")
    treehouses ap internet $hotspotname $hotspotpassword;;
  "aplocal")
    treehouses ap local $hotspotname $hotspotpassword;;
  "bridge")
    treehouses bridge $wifiname $hotspotname $wifipassword $hotspotpassword;;
  *)
    echo "Unsupported configuration. Switching to default ap internet config";
    treehouses ap internet treehouses;;
esac

mkdir -p /srv/pihole

sync;sync;sync

{
  echo "version: \"3\""
  echo
  echo "# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/"
  echo "services:"
  echo "  pihole:"
  echo "    container_name: pihole"
  echo "    image: pihole/pihole:4.3.1-4_armhf"
  echo "    ports:"
  echo "      - \"53:53/tcp\""
  echo "      - \"53:53/udp\""
  echo "      - \"67:67/udp\""
  echo "      - \"8053:80/tcp\""
  echo "      - \"443:443/tcp\""
  echo "    environment:"
  echo "      TZ: 'America/New_York'"
  echo "      WEBPASSWORD: $piholepassword"
  echo "    # Volumes store your data between container upgrades"
  echo "    volumes:"
  echo "      - './etc-pihole/:/etc/pihole/'"
  echo "      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'"
  echo "    dns:"
  echo "      - 127.0.0.1"
  echo "      - 1.1.1.1"
  echo "    # Recommended but not required (DHCP needs NET_ADMIN)"
  echo "    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities"
  echo "    cap_add:"
  echo "      - NET_ADMIN"
  echo "    restart: unless-stopped"
} > /srv/pihole/pihole.yml

{
  echo "#!/bin/sh"
  echo
  echo "sleep 1"
  echo
  echo "service dnsmasq stop"
  echo "docker-compose -f /srv/pihole/pihole.yml -p pihole up -d"
} > /boot/autorun

sync;sync;sync

case "$(treehouses detectrpi)" in
  RPIZW|RPI3A+)
    treehouses bootoption console
esac

reboot

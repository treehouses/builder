#!/bin/bash

hostname='ole'
hotspotname='treehouse'
port='5984'
version='0.13.19'

pirateship rename $hostname
pirateship expandfs

# create couchdb docker container
docker run -d -p $port:5984 --name $hostname -v /srv/data/$hostname:/usr/local/var/lib/couchdb -v /srv/log/$hostname:/usr/local/var/log/couchdb dogi/rpi-couchdb

# download BeLL-Apps
mkdir -p /root/ole/$version
cd /root/ole/$version || exit 1
wget https://github.com/open-learning-exchange/BeLL-Apps/archive/$version.zip
unzip ./*.zip
sync
sync
sync
ln -s BeLL-Apps-* BeLL-Apps
cd BeLL-Apps || exit 1
chmod +x node_modules/.bin/couchapp

cd app || exit 1
python minify_html.py
mv MyApp/index.html MyApp/index1.html
mv MyApp/index2.html MyApp/index.html
mv nation/index.html nation/index1.html
mv nation/index2.html nation/index.html
cd ..
sync
sync
sync

# install community

# check if docker is running
while ! curl -X GET http://127.0.0.1:$port/_all_dbs ; do
  sleep 1
done

## create databases & push design docs into them
for database in databases/*.js; do
  curl -X PUT "http://127.0.0.1:$port/${database:10:-3}"
  ## do in all except communities languages configurations
  case ${database:10:-3} in
    "communities" | "languages" | "configurations" ) ;;
    * ) node_modules/.bin/couchapp push "$database" "http://127.0.0.1:$port/${database:10:-3}" ;;
  esac
done

## add bare minimal required data to couchdb for launching bell-apps smoothly
for filename in init_docs/languages/*.txt; do
  curl -d "@$filename" -H "Content-Type: application/json" -X POST http://127.0.0.1:$port/languages;
done
curl -d @init_docs/ConfigurationsDoc-Community.txt -H "Content-Type: application/json" -X POST http://127.0.0.1:$port/configurations
#curl -d @init_docs/admin.txt -H "Content-Type: application/json" -X POST http://127.0.0.1:$port/members

# favicon.ico
wget https://open-learning-exchange.github.io/favicon.ico
mv favicon.ico /srv/data/$hostname/.
curl -X PUT 'http://127.0.0.1:'$port'/_config/httpd_global_handlers/favicon.ico' -d '"{couch_httpd_misc_handlers, handle_favicon_req, \"/usr/local/var/lib/couchdb\"}"'

# write '/boot/autrun.sh'
{
  echo '#!/bin/sh'
  echo ''
  echo 'sleep 1'
  echo 'docker start '$hostname
} > /boot/autorun.sh

# redirect to bell
mkdir -p /root/ole
{
  echo '#!/usr/bin/env node'
  echo ''
  echo "var express = require('express')"
  echo 'var PortJack = express()'
  echo 'PortJack.get(/^(.+)$/, function(req, res) {'
  echo 'var options = {'
  echo '"'$hostname'.local": "http://'$hostname'.local:'$port'/apps/_design/bell/MyApp/index.html",'
  echo '"192.168.2.1": "http://192.168.2.1:'$port'/apps/_design/bell/MyApp/index.html",'
  echo '"192.168.0.99": "http://192.168.0.99:'$port'/apps/_design/bell/MyApp/index.html",'
  echo '"192.168.1.99": "http://192.168.1.99:'$port'/apps/_design/bell/MyApp/index.html"'
  echo '}'
  echo 'if (options.hasOwnProperty(req.hostname)) {'
  echo "res.setHeader('Location', options[req.hostname])"
  echo '}'
  echo 'else {'
  echo "res.setHeader('Location', 'http://ole.org')"
  echo '}'
  echo 'res.statusCode = 302'
  echo 'res.end()'
  echo '})'
  echo 'PortJack.listen(80)'
} > /root/ole/server.js
chmod +x /root/ole/server.js
cd /root/ole || exit 1
npm install express

# add to '/boot/autorun.sh'
echo '' >> /boot/autorun.sh
echo 'node /root/ole/server.js' >> /boot/autorun.sh

pirateship hotspot $hotspotname

sync
sync
sync

#reboot
